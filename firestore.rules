rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        match /users/{uid} {
            allow get: if request.auth.uid != null;
            allow list: if false;
            allow write: if request.auth.uid == uid;
        }

        match /teams/{id} {
        		function isMember() {
            	return exists(/databases/$(database)/documents/teams/$(id)/members/$(request.auth.uid))
            }

            function isAdmin() {
            	return get(/databases/$(database)/documents/teams/$(id)).data.owner == request.auth.uid || (isMember() && get(/databases/$(database)/documents/teams/$(id)/members/$(request.auth.uid)).data.admin == true)
            }

            allow get: if isMember()
            allow list: if false
            allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.owner
            allow update, delete: if isAdmin()

            match /members/{uid} {
            		function isValidToken() {
                  return request.resource.data.token == get(/databases/$(database)/documents/teams/$(id)).data.token
                }

                function isNotAdmin() {
                  return request.resource.data.admin == false
                }

                allow read: if isMember()
                allow create: if isAdmin() || (isValidToken() && isNotAdmin())
                allow update: if isAdmin() || isNotAdmin()
                allow delete: if isAdmin() || request.auth.uid == uid
            }
        }

        match /boards/{id} {
            allow get: if request.auth.uid != null;
            allow list: if false;
            allow create: if request.auth.uid == request.resource.data.owner;
            allow update, delete: if get(/boards/{id}).data.owner == request.auth.uid || get(/boards/{id}/members/$(request.auth.uid)).data.admin == true

            match /applicants/{uid} {
                allow read: if exists(/databases/$(database)/documents/boards/{id}/members/$(request.auth.uid))
                allow create: if request.resource.data.accepted == false && uid == request.auth.uid
                allow update, delete: if get(/boards/{id}).data.owner == request.auth.uid || get(/databases/$(database)/documents/boards/{id}/members/$(request.auth.uid)).data.admin == true
            }

            match /members/{uid} {
                allow get: if exists(/databases/$(database)/documents/boards/{id}/members/$(request.auth.uid))
                allow create: if get(/boards/{id}).data.owner == request.auth.uid || get(/databases/$(database)/documents/boards/{id}/members/$(request.auth.uid)).data.admin == true
                allow update: if get(/boards/{id}).data.owner == request.auth.uid || get(/boards/{id}/members/$(request.auth.uid)).data.admin == true || request.resource.data.admin == false
                allow delete: if request.auth.uid == uid || get(/boards/{id}).data.owner == request.auth.uid || get(/boards/{id}/members/$(request.auth.uid)).data.admin == true
            }
        }

        match /strings/{document=**} {
            allow read: if true;
            allow list: if true;
            allow write: if false;
        }
    }
}